name: CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.tool-versions'
      - '.gitignore'
    #   - '.dockerignore'
      - 'demo/**'
  pull_request:


env:
  CI: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_CONTEXT: ${{ toJson(github) }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build
        uses: ./.github/actions/build

      - name: lint
        run: make lint

  test:
    # needs: lint
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test_web_libraryms
          POSTGRES_PASSWORD: postgres
          PGUSER: postgres # default for healthcheck
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: build
        uses: ./.github/actions/build

      - name: test
        run: make test

      - name: Generate coverage badge
      # if: github.ref == 'refs/heads/main'
        uses: tj-actions/coverage-badge-py@v2

      - name: Verify changed coverage.svg
        uses: tj-actions/verify-changed-files@v14
        # if: github.ref == 'refs/heads/main'
        id: verify-changed-files
        with:
          files: coverage.svg

      - name: Commit coverage.svg
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Updated coverage.svg" -a

      - name: Push coverage.svg
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}

  deploy-to-fly:
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'peacefulseeker'
    needs: [lint, test]
    runs-on: ubuntu-latest
    concurrency: deploy-group    # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
